package com.oculusvr.api;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : OVR_CAPI.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ovrRenderAPIConfigHeader_ extends Structure {
  /**
   * @see ovrRenderAPIType<br>
   * C type : ovrRenderAPIType
   */
  public int API;
  /** C type : ovrSizei */
  public ovrSizei_ RTSize;
  public int Multisample;
  public ovrRenderAPIConfigHeader_() {
    super();
  }
  protected List<? > getFieldOrder() {
    return Arrays.asList("API", "RTSize", "Multisample");
  }
  /**
   * @param API @see ovrRenderAPIType<br>
   * C type : ovrRenderAPIType<br>
   * @param RTSize C type : ovrSizei
   */
  public ovrRenderAPIConfigHeader_(int API, ovrSizei_ RTSize, int Multisample) {
    super();
    this.API = API;
    this.RTSize = RTSize;
    this.Multisample = Multisample;
  }
  public static class ByReference extends ovrRenderAPIConfigHeader_ implements Structure.ByReference {
    
  };
  public static class ByValue extends ovrRenderAPIConfigHeader_ implements Structure.ByValue {
    
  };
}
