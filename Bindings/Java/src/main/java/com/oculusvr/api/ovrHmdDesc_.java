package com.oculusvr.api;
import com.oculusvr.api.OvrLibrary.ovrHmd;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : OVR_CAPI.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ovrHmdDesc_ extends Structure {
  /**
   * Handle of this HMD.<br>
   * C type : ovrHmd
   */
  public ovrHmd Handle;
  /**
   * @see ovrHmdType<br>
   * C type : ovrHmdType
   */
  public int Type;
  /**
   * Name string describing the product: "Oculus Rift DK1", etc.<br>
   * C type : const char*
   */
  public Pointer ProductName;
  /** C type : const char* */
  public Pointer Manufacturer;
  /** Capability bits described by ovrHmdCapBits. */
  public int Caps;
  public int DistortionCaps;
  /**
   * Resolution of the entire HMD screen (for both eyes) in pixels.<br>
   * C type : ovrSizei
   */
  public ovrSizei_ Resolution;
  /**
   * Where monitor window should be on screen or (0,0).<br>
   * C type : ovrVector2i
   */
  public ovrVector2i_ WindowsPos;
  /**
   * These define the recommended and maximum optical FOVs for the HMD.<br>
   * C type : ovrFovPort[ovrEye_Count]
   */
  public ovrFovPort_[] DefaultEyeFov = new ovrFovPort_[(int)com.oculusvr.api.OvrLibrary.ovrEyeType.ovrEye_Count];
  /** C type : ovrFovPort[ovrEye_Count] */
  public ovrFovPort_[] MaxEyeFov = new ovrFovPort_[(int)com.oculusvr.api.OvrLibrary.ovrEyeType.ovrEye_Count];
  /**
   * Can help reduce latency on sideways-scanned screens.<br>
   * C type : ovrEyeType[ovrEye_Count]
   */
  public int[] EyeRenderOrder = new int[(int)com.oculusvr.api.OvrLibrary.ovrEyeType.ovrEye_Count];
  /**
   * Windows: "\\\\.\\DISPLAY3", etc. Can be used in EnumDisplaySettings/CreateDC.<br>
   * C type : const char*
   */
  public Pointer DisplayDeviceName;
  /** MacOS */
  public NativeLong DisplayId;
  public ovrHmdDesc_() {
    super();
  }
  protected List<? > getFieldOrder() {
    return Arrays.asList("Handle", "Type", "ProductName", "Manufacturer", "Caps", "DistortionCaps", "Resolution", "WindowsPos", "DefaultEyeFov", "MaxEyeFov", "EyeRenderOrder", "DisplayDeviceName", "DisplayId");
  }
  public static class ByReference extends ovrHmdDesc_ implements Structure.ByReference {
    
  };
  public static class ByValue extends ovrHmdDesc_ implements Structure.ByValue {
    
  };
}
